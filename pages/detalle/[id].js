import { React} from "react";
import Head from "next/head";
import { getFotos } from "@/api/HomeGet";


const id = (props) => {


  const {id,created_at, user, urls, links, tags} = props.data;

  return ( 
    <>
      <Head>
        <title>{tags[0].title}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="../../public/1298736-3f51b5.svg" />
      </Head>
      <div className="m-5  justify-content-center d-flex">
          <>
            <div className="d-flex flex-column h-25 gap-2 justify-content-center">
              <img src={urls.raw }  alt={id} />  
              <p> Subida: {created_at.substring(0, 10)}</p> 
              <p> Autor: {user.name}</p> 
              <a href={`${links.download}`} download={`${id}.jpg`} className="btn btn-success">Descargar</a>
            </div> 
          </>
        
      </div>
    
    </>
  );
};

export default id;


export async function getStaticPaths(){

  const fetchData = async  ()=> {

    const rutas = [{}];

    const datos = await getFotos(null, 1);
    const { total_pages } = datos;
    for (let i = 0; i<=total_pages; i++){
      const ruta = await getFotos(null, i);
      const convertir = ruta.results;
      const paths = convertir.map((element) =>  element.id );  
      const rutash = paths.map((element) =>  ({params:{id: `${element}`}}) ); 
      rutas.push(rutash);

      return rutas;
  }
    }
        const page= await fetchData();
      try{      
          
        const res = await fetch(
            `https://api.unsplash.com/search/photos?page=${page}&query=null`,
            {
              method: "GET",
              headers:  {
                "Content-type": "application/json; charset=UTF-8",
                "Authorization": JSON.stringify("Client-ID 9m9DxUxtFA0CCKO9UMSaxLTl2G4UbypsJ8UVvjBUteM"),
                },
            }
            ).then((res) => res.json());
            const datos = res.results;
            const paths = datos.map((element) =>  ({params:{id: `${element.id}`}}) ); 
                
            return{
            paths,
            fallback:false
            }  
    } catch (error){
        console.log(error);

    }
}


export async function getStaticProps({params}){
    try{
      
        const data = await fetch(
            `https://api.unsplash.com/photos/${params.id}`,
            {
              method: "GET",
              headers:  {
                "Content-type": "application/json; charset=UTF-8",
                "Authorization": JSON.stringify("Client-ID 9m9DxUxtFA0CCKO9UMSaxLTl2G4UbypsJ8UVvjBUteM"),
                },
            }
            ).then((data) => data.json());
            return{
                props:{
                  data
                },
            }
    } catch (error){
        console.log( error);
    }
}  
